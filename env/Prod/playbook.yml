- hosts: terraform-ansible
  tasks:
  - name: Instalando o python3, virtualenv
    apt:
      pkg:
      - python3
      - virtualenv
      update_cache: yes
    become: yes
  - name: Git Clone #! Aqui vamos clonar um projeto que esta dentro do Git para a produção. 
    ansible.builtin.git:   #! Qui e o git do ansible.
      repo: https://github.com/guilhermeonrails/clientes-leo-api.git #! Fazendo o download do repositorio git.
      dest: /home/ubuntu/tcc #! Aqui o destino. 
      version: master #! Aqui é a branch principal do código no git. 
      force: yes 
  - name: Instalando dependencias com pip (Django e Django Rest)
    pip:
      virtualenv: /home/ubuntu/tcc/venv
      requirements: /home/ubuntu/tcc/requirements.txt   #! Verificando dependencias, ele verifique esse arquivo "requirements.txt" e faça a instalação de todos os módulos necessários     
  - name: Alterando o hosts do settings
    lineinfile:
      path: /home/ubuntu/tcc/setup/settings.py
      regexp: 'ALLOWED_HOSTS'
      line: 'ALLOWED_HOSTS = ["*"]'
      backrefs: yes
  - name: configurando o banco de dados #! Garantir que a nossa base de dados foi carregada
    shell: '. /home/ubuntu/tcc/venv/bin/activate; python /home/ubuntu/tcc/manage.py migrate'
  - name: carregando os dados iniciais
    shell: '. /home/ubuntu/tcc/venv/bin/activate; python /home/ubuntu/tcc/manage.py loaddata clientes.json'
  - name: iniciando o servidor
    shell: '. /home/ubuntu/tcc/venv/bin/activate; nohup python /home/ubuntu/tcc/manage.py runserver 0.0.0.0:8000 &'